{"version":3,"sources":["features/instruments/Instruments.module.css","app/hooks.ts","features/instruments/instrumentsSlice.ts","app/data.ts","features/instruments/Instruments.tsx","features/keyboard/keyboardSlice.ts","app/store.ts","features/keyboard/sound.ts","features/keyboard/keyboard.tsx","features/keyboard/soundRange.tsx","features/keyboard/pianoRoll.tsx","App.tsx","serviceWorker.ts","index.tsx","features/keyboard/pianoRoll.module.css"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","instruments","name","pitchRange","color","map","item","selected","instrumentsSlice","createSlice","reducers","toggle","state","action","i","length","instrument","payload","actions","selectInstruments","activeInstruments","InstrumentRow","props","dispatch","className","styles","row","type","checked","onChange","rowText","Instruments","items","list","keyboardSlice","notes","add","push","remove","filter","value","clear","selectNotes","activeNotes","unitNoteWidth","store","configureStore","reducer","instrumentsReducer","keyboardReducer","synth","Tone","toDestination","noteToPitchOctave","noteNum","pitch","octave","Math","floor","String","makeSound","pitchOctave","triggerAttackRelease","SingleKey","textColor","x","includes","onMouseDown","e","shiftKey","stopPropagation","handleMouseDown","onMouseEnter","buttons","handleMouseEnter","y","width","height","fill","stroke","fontSize","Keyboard","selectedNotes","viewBox","keyboard","xmlns","SoundRange","join","x1","y1","x2","y2","strokeDasharray","fillOpacity","strokeOpacity","textAnchor","RangeCanvas","noteRange","min","max","isBetween","alignedInstruments","layouts","j","some","a","b","layoutRanges","forEach","unshift","rangeCanvas","PianoRoll","ref","useRef","useEffect","current","scrollTo","svgCanvas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.438f2e36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Instruments_row__1_7Q1\",\"rowText\":\"Instruments_rowText__2WJDN\",\"list\":\"Instruments_list__3TCx2\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport { instrumentList, Instrument } from '../../app/data';\n\nexport interface InstrumentsState {\n  instruments: Instrument[];\n}\n\nconst initialState: InstrumentsState = {\n  instruments: instrumentList,\n};\n\nexport const instrumentsSlice = createSlice({\n  name: 'selectedInstruments',\n  initialState,\n  reducers: {\n    toggle: (state, action: PayloadAction<string>) => {\n      for (let i = 0; i < state.instruments.length; i++) {\n        const instrument: Instrument = state.instruments[i];\n        if (instrument.name === action.payload) {\n          state.instruments[i].selected = !instrument.selected;\n          break;\n        }\n      }\n    },\n  },\n});\n\nexport const { toggle } = instrumentsSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectInstruments = (state: RootState) =>\n  state.activeInstruments.instruments;\n\nexport default instrumentsSlice.reducer; // counterReducerとして参照されている\n","type InstSeed = {\n  name: string;\n  pitchRange: [number, number];\n  color: string;\n};\n\nconst items: InstSeed[] = [\n  { name: 'Piano', pitchRange: [21, 108], color: 'blue' },\n  { name: 'Harp', pitchRange: [23, 103], color: 'dodgerblue' },\n  { name: 'Violin', pitchRange: [55, 96], color: 'palevioletred' },\n  { name: 'Viola', pitchRange: [48, 84], color: 'crimson' },\n  { name: 'Cello', pitchRange: [36, 72], color: 'brown' },\n  { name: 'Bass', pitchRange: [28, 55], color: 'maroon' },\n  { name: 'Trumpet', pitchRange: [58, 94], color: 'yellow' },\n  { name: 'Horn', pitchRange: [41, 77], color: 'orange' },\n  { name: 'Trombone', pitchRange: [34, 75], color: 'gold' },\n  { name: 'Tuba', pitchRange: [29, 55], color: 'goldenrod' },\n  { name: 'Piccolo', pitchRange: [74, 108], color: 'aquamarine' },\n  { name: 'Flute', pitchRange: [60, 96], color: 'palegreen' },\n  { name: 'Oboe', pitchRange: [58, 91], color: 'limegreen' },\n  { name: 'Clarinet', pitchRange: [50, 91], color: 'forestgreen' },\n  { name: 'Timpani', pitchRange: [36, 57], color: 'beige' },\n  { name: 'Chorus', pitchRange: [48, 79], color: 'purple' },\n  { name: 'Celesta', pitchRange: [60, 108], color: 'sienna' },\n  { name: 'Glockenspiel', pitchRange: [72, 108], color: 'lightgray' },\n  { name: 'Vibraphone', pitchRange: [53, 89], color: 'whitesmoke' },\n  { name: 'Marimba', pitchRange: [48, 84], color: 'darkred' },\n  { name: 'Organ', pitchRange: [36, 96], color: 'chocolate' },\n  { name: 'Accordion', pitchRange: [53, 89], color: 'red' },\n  { name: 'Harmonica', pitchRange: [60, 84], color: 'wheat' },\n  { name: 'Guitar', pitchRange: [40, 84], color: 'darkorange' },\n  { name: 'Bass Guitar', pitchRange: [28, 55], color: 'gray' },\n];\n\nexport type Instrument = {\n  name: string;\n  pitchRange: [number, number]; // min - max\n  selected: boolean;\n  color: string;\n};\n\nexport const instrumentList: Instrument[] = items.map((item) => ({\n  ...item,\n  selected: true,\n}));\n","import React from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { toggle, selectInstruments } from './instrumentsSlice';\nimport styles from './Instruments.module.css';\n\ninterface DisplayItem {\n  name: string;\n  selected: boolean;\n}\n\nfunction InstrumentRow(props: DisplayItem) {\n  const dispatch = useAppDispatch(); // Redux storeへのdispatch\n\n  return (\n    <div className={styles.row}>\n      <input\n        type=\"checkbox\"\n        checked={props.selected}\n        onChange={() => dispatch(toggle(props.name))}\n      />\n      <span className={styles.rowText}>{props.name}</span>\n    </div>\n  );\n}\n\nexport function Instruments() {\n  const instruments = useAppSelector(selectInstruments); // Redux store stateから値を読み出すための関数\n  const items = instruments.map((instrument) => (\n    <InstrumentRow\n      key={instrument.name}\n      name={instrument.name}\n      selected={instrument.selected}\n    />\n  ));\n\n  return <div className={styles.list}>{items}</div>;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport interface keyboardState {\n  notes: number[];\n}\n\nconst initialState: keyboardState = {\n  notes: [],\n};\n\nexport const keyboardSlice = createSlice({\n  name: 'selectedNotes',\n  initialState,\n  reducers: {\n    add: (state, action: PayloadAction<number>) => {\n      state.notes.push(action.payload);\n    },\n    remove: (state, action: PayloadAction<number>) => {\n      state.notes = state.notes.filter((value) => value !== action.payload);\n    },\n    clear: (state) => {\n      state.notes = [];\n    },\n  },\n});\n\nexport const { add, remove, clear } = keyboardSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectNotes = (state: RootState) => state.activeNotes.notes;\n\nexport default keyboardSlice.reducer; // counterReducerとして参照されている\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport instrumentsReducer from '../features/instruments/instrumentsSlice';\nimport keyboardReducer from '../features/keyboard/keyboardSlice';\n\nexport const unitNoteWidth = 12;\n\nexport const store = configureStore({\n  reducer: {\n    activeInstruments: instrumentsReducer,\n    activeNotes: keyboardReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import * as Tone from 'tone';\n\nconst synth = new Tone.Synth().toDestination();\n\nexport function noteToPitchOctave(noteNum: number) {\n  // prettier-ignore\n  const pitchList = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n  const pitch = pitchList[noteNum % 12];\n  const octave = Math.floor(noteNum / 12) - 1;\n  return pitch + String(octave);\n}\n\nexport function makeSound(noteNum: number) {\n  const pitchOctave = noteToPitchOctave(noteNum);\n  synth.triggerAttackRelease(pitchOctave, '4n');\n}\n","import React from 'react';\nimport { unitNoteWidth } from '../../app/store';\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { add, clear, selectNotes } from './keyboardSlice';\nimport { makeSound, noteToPitchOctave } from './sound';\nimport styles from './pianoRoll.module.css';\n\ninterface DisplayKey {\n  noteNum: number;\n  selected: boolean;\n}\n\nfunction SingleKey(props: DisplayKey) {\n  const dispatch = useAppDispatch();\n  const x = props.noteNum * unitNoteWidth;\n  const blackNums = [1, 3, 6, 8, 10]; // 黒鍵を12で割った余り\n  let color: string;\n  let textColor: string;\n  if (blackNums.includes(props.noteNum % 12)) {\n    // 黒鍵\n    color = props.selected ? '#37557c' : '#232323';\n    textColor = 'white';\n  } else {\n    color = props.selected ? '#7097ca' : '#d9d9da';\n    textColor = 'black';\n  }\n\n  function handleMouseDown(e: React.MouseEvent<SVGGElement, MouseEvent>) {\n    if (!e.shiftKey) {\n      dispatch(clear());\n    }\n    dispatch(add(props.noteNum));\n    makeSound(props.noteNum);\n    e.stopPropagation();\n  }\n\n  function handleMouseEnter(e: React.MouseEvent<SVGGElement, MouseEvent>) {\n    if (e.buttons === 1) {\n      // left click\n      dispatch(add(props.noteNum));\n      makeSound(props.noteNum);\n    }\n  }\n\n  return (\n    <g\n      onMouseDown={(e) => handleMouseDown(e)}\n      onMouseEnter={(e) => handleMouseEnter(e)}\n    >\n      <rect\n        x={x}\n        y=\"0\"\n        width={unitNoteWidth}\n        height=\"50\"\n        fill={color}\n        stroke=\"black\"\n      />\n      {props.noteNum % 12 === 0 && (\n        <text x={x} y=\"40\" fill={textColor} fontSize={unitNoteWidth * 0.7}>\n          {noteToPitchOctave(props.noteNum)}\n        </text>\n      )}\n    </g>\n  );\n}\n\nexport function Keyboard() {\n  const selectedNotes = useAppSelector(selectNotes);\n  const items = [];\n  for (let i = 0; i < 128; i++) {\n    const selected = selectedNotes.includes(i);\n    items.push(<SingleKey key={String(i)} noteNum={i} selected={selected} />);\n  }\n\n  const width = 128 * unitNoteWidth;\n  const height = 50;\n  const viewBox = `0 0 ${width} ${height}`;\n\n  return (\n    <div className={styles.keyboard}>\n      <svg\n        width={width}\n        height={height}\n        viewBox={viewBox}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {items}\n      </svg>\n    </div>\n  );\n}\n","import React from 'react';\nimport { unitNoteWidth } from '../../app/store';\nimport { useAppSelector } from '../../app/hooks';\nimport { Instrument } from '../../app/data';\nimport { selectInstruments } from '../instruments/instrumentsSlice';\nimport { selectNotes } from './keyboardSlice';\nimport { noteToPitchOctave } from './sound';\nimport styles from './pianoRoll.module.css';\n\ninterface SoundItem {\n  name: string;\n  pitchRange: [number, number];\n  color: string;\n  y: number;\n}\nfunction SoundRange(props: SoundItem) {\n  const pitchOctave = props.pitchRange\n    .map((noteNum) => noteToPitchOctave(noteNum))\n    .join('–');\n  const x = props.pitchRange[0] * unitNoteWidth;\n  const y = 100 + props.y * 40;\n  const width = (props.pitchRange[1] - props.pitchRange[0] + 1) * unitNoteWidth;\n  // prettier-ignore\n  return (\n    <g>\n      <line\n        x1={x} y1=\"50\"\n        x2={x} y2={y}\n        stroke={props.color}\n        strokeDasharray=\"4\"\n      />\n      <line\n        x1={x+width} y1=\"50\"\n        x2={x+width} y2={y}\n        stroke={props.color}\n        strokeDasharray=\"4\"\n      />\n      <rect\n        x={x} y={y}\n        width={width} height=\"30\"\n        fill={props.color} fillOpacity=\"0.4\"\n        stroke={props.color} strokeOpacity=\"1.0\"\n      />\n      <text\n        x={x + width/2} y={y + 23}\n        textAnchor=\"middle\"\n        fontSize=\"20\"\n        fill=\"white\"\n      >\n        {props.name}: {pitchOctave}\n      </text>\n    </g>\n  )\n}\n\nfunction isBetween(noteRange: [number, number], pitchRange: [number, number]) {\n  // noteRangeがpitchRangeに含まれるか\n  return pitchRange[0] <= noteRange[0] && noteRange[1] <= pitchRange[1];\n}\n\nfunction layoutRanges(instruments: Instrument[]) {\n  const isIntersect = (a: [number, number], b: [number, number]) =>\n    a[0] <= b[1] && b[0] <= a[1];\n\n  const layouts: Instrument[][] = [];\n  for (let i = 0; i < instruments.length; i++) {\n    const instrument = instruments[i];\n\n    for (let j = 0; j < layouts.length + 1; j++) {\n      if (j === layouts.length) {\n        // 新たな行を追加\n        layouts.push([instrument]);\n        break;\n      }\n      const someIntersect = layouts[j].some((item) =>\n        isIntersect(instrument.pitchRange, item.pitchRange)\n      );\n      if (!someIntersect) {\n        // 被ってない行があればそこに入れ込む\n        layouts[j].push(instrument);\n        break;\n      }\n    }\n  }\n\n  return layouts;\n}\n\nexport function RangeCanvas() {\n  const instruments = useAppSelector(selectInstruments);\n  const activeNotes = useAppSelector(selectNotes);\n\n  let activeInstruments: Instrument[];\n  if (activeNotes.length === 0) {\n    // 空だったら全楽器表示\n    activeInstruments = instruments.filter((item) => item.selected);\n  } else {\n    const noteRange: [number, number] = [\n      Math.min(...activeNotes),\n      Math.max(...activeNotes),\n    ];\n    activeInstruments = instruments.filter(\n      (item) => item.selected && isBetween(noteRange, item.pitchRange)\n    );\n  }\n\n  const alignedInstruments = layoutRanges(activeInstruments);\n\n  const items: React.ReactElement[] = [];\n  for (let i = 0; i < alignedInstruments.length; i++) {\n    alignedInstruments[i].forEach((item) => {\n      items.unshift(\n        <SoundRange\n          key={item.name}\n          name={item.name}\n          pitchRange={item.pitchRange}\n          color={item.color}\n          y={i}\n        />\n      );\n    });\n  }\n\n  const width = 128 * unitNoteWidth;\n  const height = 1000;\n  const viewBox = `0 0 ${width} ${height}`;\n  return (\n    <div className={styles.rangeCanvas}>\n      <svg\n        width={width}\n        height={height}\n        viewBox={viewBox}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {items}\n      </svg>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Keyboard } from './keyboard';\nimport { RangeCanvas } from './soundRange';\nimport { useAppDispatch } from '../../app/hooks';\nimport { clear } from './keyboardSlice';\nimport styles from './pianoRoll.module.css';\n\nexport function PianoRoll() {\n  const dispatch = useAppDispatch();\n  const ref = useRef<HTMLDivElement>(null);\n\n  // 読み込み時にスクロール位置を設定\n  useEffect(() => {\n    ref.current?.scrollTo(150, 0);\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className={styles.svgCanvas}\n      ref={ref}\n      onMouseDown={() => dispatch(clear())}\n    >\n      <Keyboard />\n      <RangeCanvas />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Instruments } from './features/instruments/Instruments';\nimport { PianoRoll } from './features/keyboard/pianoRoll';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Instruments />\n      <PianoRoll />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// <Provider store={store}>でAppを囲むことで, Appの中でstoreを使えるようになる\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgCanvas\":\"pianoRoll_svgCanvas__1N87W\",\"keyboard\":\"pianoRoll_keyboard__3zgSl\",\"rangeCanvas\":\"pianoRoll_rangeCanvas__1pU13\"};"],"sourceRoot":""}